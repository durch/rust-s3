[package]
name = "rust-s3"
version = "0.34.0-beta3"
authors = ["Drazen Urch"]
description = "Rust library for working with AWS S3 and compatible object storage APIs"
repository = "https://github.com/durch/rust-s3"
readme = "README.md"
keywords = ["S3", "Wasabi", "Minio", "GCP", "R2"]
license = "MIT"
documentation = "https://docs.rs/aws-creds/latest/awscreds/"
edition = "2018"

[lib]
name = "s3"
path = "src/lib.rs"

[[example]]
name = "tokio"
path = "../examples/tokio-backend.rs"

[[example]]
name = "async-std"
path = "../examples/async-std-backend.rs"

[[example]]
name = "sync"
path = "../examples/sync-backend.rs"

[[example]]
name = "minio"
path = "../examples/minio-tokio.rs"

[[example]]
name = "r2"
path = "../examples/r2-tokio.rs"

[[example]]
name = "google-cloud"
path = "../examples/gcs-tokio.rs"


[dependencies]
async-std = { version = "1", optional = true }
async-trait = "0.1"
attohttpc = { version = "0.24", optional = true, default-features = false }
aws-creds = { version = "0.35.0", default-features = false }
# aws-creds = { path = "../aws-creds", default-features = false }
aws-region = "0.25.3"
# aws-region = {path = "../aws-region"}
base64 = "0.21"
cfg-if = "1"
time = { version = "^0.3.6", features = ["formatting", "macros"] }
futures = { version = "0.3", optional = true }
futures-io = { version = "0.3", optional = true }
futures-util = { version = "0.3", optional = true, features = ["io"] }
hex = "0.4"
hmac = "0.12"
http = "0.2"
hyper = { version = "0.14", default-features = false, features = [
    "client",
    "http1",
    "stream",
], optional = true }
hyper-tls = { version = "0.5.0", default-features = false, optional = true }
hyper-native-tls = { version = "0.3.0", default-features = false, optional = true }
log = "0.4"
maybe-async = { version = "0.2" }
md5 = "0.7"
percent-encoding = "2"
serde = "1"
serde_json = "1"
serde_derive = "1"
quick-xml = { version = "0.28", features = ["serialize"] }
sha2 = "0.10"
thiserror = "1"
surf = { version = "2", optional = true, default-features = false, features = [
    "h1-client-rustls",
] }
tokio = { version = "1", features = [
    "io-util",
], optional = true, default-features = false }
tokio-native-tls = { version = "0.3", optional = true }
native-tls = { version = "0.2", optional = true }
tokio-stream = { version = "0.1", optional = true }
url = "2"
minidom = { version = "0.15", optional = true }
bytes = { version = "1" }
block_on_proc = { version = "0.2", optional = true }

[features]
default = ["tags", "use-tokio-native-tls", "fail-on-err"]
use-tokio-native-tls = ["with-tokio", "aws-creds/native-tls"]
with-tokio = [
    "hyper",
    "hyper-tls",
    "tokio",
    "tokio/fs",
    "tokio-stream",
    "tokio-native-tls",
    "native-tls",
    "futures",
]
async-std-native-tls = ["with-async-std", "aws-creds/native-tls"]
with-async-std = ["async-std", "surf", "futures-io", "futures-util", "futures"]
sync = ["attohttpc", "maybe-async/is_sync"]
no-verify-ssl = []
fail-on-err = []
tokio-rustls-tls = ["with-tokio", "aws-creds/rustls-tls"]
sync-native-tls = ["sync", "aws-creds/native-tls", "attohttpc/tls"]
sync-native-tls-vendored = [
    "sync",
    "aws-creds/native-tls-vendored",
    "attohttpc/tls-vendored",
]
sync-rustls-tls = ["sync", "aws-creds/rustls-tls", "attohttpc/tls-rustls"]
blocking = ["block_on_proc", "tokio/rt", "tokio/rt-multi-thread"]
tags = ["minidom"]

[dev-dependencies]
tokio = { version = "1", features = ["rt", "rt-multi-thread", "macros", "fs"] }
async-std = { version = "1", features = ["attributes"] }
uuid = { version = "1", features = ["v4"] }
env_logger = "0.10"
anyhow = "1"
